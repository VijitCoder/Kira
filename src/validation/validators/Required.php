<?php
namespace kira\validation\validators;

/**
 * Проверка необходимого значения на существование
 *
 * Валидатор с особым поведением. Он вызывается раньше любого другого валидатора независимо от их очередности,
 * т.к. в нем выясняем, можно ли пропустить остальные проверки.
 */
class Required extends AbstractValidator
{
    /**
     * Дефолтные параметры валидатора
     * @var array
     */
    protected $options = ['message' => 'Поле должно быть заполнено'];

    /**
     * Проверка необходимого значения на существование. Если валидатор умышленно отключен, тогда всегда считать проверку
     * пройденной.
     *
     * Не проверяем значение, как массив, т.к. этим занимается другой валидатор и он гарантирует здесь только
     * скалярное значение.
     *
     * Прим: нельзя для проверки использовать php::empty(), т.к. "0", 0 и 0.0 - это допустимые значения.
     *
     * @param mixed $value проверяемое значение
     * @return bool
     */
    public function validate($value)
    {
        $this->value = $value;
        return !$this->options || !is_null($value) && preg_match('/.{1,}/', $value);
    }
}
